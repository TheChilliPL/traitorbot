plugins {
    id "application"
    id "org.jetbrains.kotlin.jvm" version "1.4.20"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group "me.patrykanuszczyk"
version "0.2.1"
mainClassName = "me.patrykanuszczyk.traitorbot.TraitorBotKt"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "org.jetbrains.exposed:exposed-core:0.28.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.28.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.28.1"
    implementation "mysql:mysql-connector-java:8.0.22"
    implementation "org.apache.logging.log4j:log4j-core:2.14.0"
    implementation "org.apache.logging.log4j:log4j-api:2.14.0"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.14.0"
    implementation "net.dv8tion:JDA:4.2.0_222"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

task copyLog4jConfig {
    doLast {
        [
                "$buildDir/classes/kotlin/main",
                "$buildDir/libs"
        ].each { dest ->
            copy {
                from '.'
                into dest
                include 'log4j2.properties'
                include 'secret.json'
            }
        }
    }
}

classes.dependsOn(copyLog4jConfig)

shadowJar {
    archiveClassifier.set("")
    //archiveVersion.set("")
    exclude 'secret.json'
}